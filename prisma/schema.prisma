generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BarangTb {
  id         Int      @id @default(autoincrement())
  kodeBarang String   @unique
  namaBarang String
  kategoriId Int
  merek      String
  unit       String
  hargaModal Int
  hargaJual  Int
  stok       Int
  foto       String?
  deskripsi  String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  KategoriTb         KategoriTb           @relation(fields: [kategoriId], references: [id], onDelete: Cascade)
  DetailtambahstokTb DetailtambahstokTb[]
  DetailPenjualanTb  DetailPenjualanTb[]
  // LogbarangTb        LogbarangTb[]
}

model KategoriTb {
  id        Int      @id @default(autoincrement())
  nama      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  BarangTb BarangTb[]
}

model TambahstokTb {
  id         Int      @id @default(autoincrement())
  tanggal    DateTime
  admin      String
  totalItem  Int
  totalBayar Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  DetailtambahstokTb DetailtambahstokTb[]
}

model DetailtambahstokTb {
  id           Int      @id @default(autoincrement())
  barangId     Int
  tambahstokId Int
  hargaModal   Int
  hargaJual    Int
  qty          Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  BarangTb     BarangTb     @relation(fields: [barangId], references: [id], onDelete: Cascade)
  TambahstokTb TambahstokTb @relation(fields: [tambahstokId], references: [id], onDelete: Cascade)
}

model KaryawanTb {
  id           Int      @id @default(autoincrement())
  nama         String
  tempatLahir  String
  tanggalLahir DateTime
  alamat       String
  hp           String   @unique
  email        String   @unique
  foto         String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  UserTb      UserTb?
  PenjualanTb PenjualanTb[]
  ServisTb    ServisTb[]
  logloginTb  logloginTb[]

  // LogkaryawanTb LogkaryawanTb[]
}

model UserTb {
  id         Int      @id @default(autoincrement())
  karyawanId Int      @unique
  usernama   String   @unique
  password   String
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  KaryawanTb    KaryawanTb      @relation(fields: [karyawanId], references: [id], onDelete: Cascade)
  LogkaryawanTb LogkaryawanTb[]
  LogbarangTb   LogbarangTb[]
}

model PenjualanTb {
  id         Int      @id @default(autoincrement())
  nofaktur   String   @unique
  tanggal    DateTime
  karyawanId Int
  totalItem  Int
  totalBayar Int
  jumlahUang Int
  kembalian  Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  DetailPenjualanTb DetailPenjualanTb[]
  KaryawanTb        KaryawanTb          @relation(fields: [karyawanId], references: [id], onDelete: Cascade)
}

model DetailPenjualanTb {
  id          Int      @id @default(autoincrement())
  barangId    Int
  penjualanId Int
  hargaModal  Int
  hargaJual   Int
  qty         Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  BarangTb    BarangTb    @relation(fields: [barangId], references: [id], onDelete: Cascade)
  PenjualanTb PenjualanTb @relation(fields: [penjualanId], references: [id], onDelete: Cascade)
}

model ServisTb {
  id             Int      @id @default(autoincrement())
  kodeServis     String
  tanggal        DateTime
  nama           String
  alamat         String
  hp             String
  namaBarang     String
  noSeri         String
  perlengkapan   String
  jenis          String
  detailSoftware String
  detailHardware String
  status         String
  karyawanId     Int
  biayaSoftware  Int?
  biayaHardware  Int?
  biayaCancel    Int?
  keterangan     String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  KaryawanTb KaryawanTb @relation(fields: [karyawanId], references: [id], onDelete: Cascade)
}

model logloginTb {
  id         Int      @id @default(autoincrement())
  karyawanId Int
  tanggal    DateTime @default(now())

  KaryawanTb KaryawanTb @relation(fields: [karyawanId], references: [id], onDelete: Cascade)
}

model LogkaryawanTb {
  id         Int      @id @default(autoincrement())
  karyawanId Int
  nama       String
  hp         String
  status     String
  tanggal    DateTime @default(now())
  userId     Int

  UserTb UserTb @relation(fields: [userId], references: [id], onDelete: Cascade)
  // KaryawanTb KaryawanTb @relation(fields: [karyawanId], references: [id], onDelete: Cascade)
}

model LogbarangTb {
  id         Int      @id @default(autoincrement())
  barangId   Int
  kodeBarang String
  nama       String
  status     String
  tanggal    DateTime @default(now())
  userId     Int

  UserTb UserTb @relation(fields: [userId], references: [id], onDelete: Cascade)
  // BarangTb     BarangTb    @relation(fields: [barangId], references: [id], onDelete: Cascade)
}
